conjure up an expression with at most n terms and at most v variables

the most common types of irreducible expressions are

* regular polynomials: ax^n + bx^m + ... + c
* irreducible polynomials: (a + 1)(a- 1)(...)
* variants on irreducible polynomials e.g. (a + 1)(a - 1)^-1

On the one hand I'd like a generalized approach, on the other hand it seems nice
to just have different conjuring algorithms, because different kinds of
(solutions to) problems come with their own  level of difficulty, e.g. (a + 2)(a
- 2) type problems are much harder than when the solution is just x^2... and in
fact, many  of the issues that my students need to solve aren't even symbolic at
all,  just "solve this big polynomial while taking into account all those pesky
little precedence rules"

It's annoying that the conjure/confuse mechanism is not up to scratch yet,  but
it might actually be a good idea to generate a bunch of exercises  by hand
(question/solution pairs). Ultimately, it's the interactive checker that's most
important from a learning perspective. (Though using the conjuring mechanism
would definitely be a good thing,  especially if we can ask it "hey, incorporate
this strategy at least once, but not this other one yet, because we haven't seen
it yet".)

So maybe switch to the web part for a bit, and then revisit the conjuring and
confusor mechanisms.

And really, the problem is not with the conjuring mechanism at all, those can
just be very simple one-term or two-term polynomials for most exercises, the
crux is with the confusor mechanism, which we have to be able to control quite
closely, so it only works with those precise rules that we feed it, and
predictably combines a fixed number of "difficult steps" with a fixed number of
"easier steps" -- perhaps even indicating the amount of confusion iterations
*per rule*, such that e.g. even if the exercise is about expanding a binomial
expression, you might also have to flip some signs etc.